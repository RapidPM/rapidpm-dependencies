<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright [2014] [www.rapidpm.org / Sven Ruppert (sven.ruppert@rapidpm.org)]
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.rapidpm</groupId>
  <artifactId>rapidpm-dependencies</artifactId>
  <packaging>pom</packaging>
  <version>3.0.0-SNAPSHOT</version>


  <inceptionYear>2013</inceptionYear>
  <organization>
    <name>RapidPM</name>
    <url>http://www.rapidpm.org</url>
  </organization>
  <scm>
    <url>https://github.com/RapidPM/rapidpm-dependencies</url>
    <connection>scm:git:https://github.com/RapidPM/rapidpm-dependencies.git</connection>
    <developerConnection>scm:git:https://github.com/RapidPM/rapidpm-dependencies.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Sven Ruppert</name>
      <email>sven.ruppert@gmail.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <issueManagement>
    <system>Github</system>
    <url>https://github.com/RapidPM/rapidpm-dependencies/issues</url>
  </issueManagement>
  <!--<ciManagement>-->
  <!--<system>TravisCI</system>-->
  <!--<url>https://travis-ci.org/RapidPM/rapidpm-dependencies/</url>-->
  <!--</ciManagement>-->
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>


  <properties>
    <jmh.version>1.10.3</jmh.version>
    <kotlin.version>0.12.1230</kotlin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <undertow.version>1.2.10.Final</undertow.version>
    <resteasy-undertow.version>3.0.11.Final</resteasy-undertow.version>
    <vwscdn.version>1.3.4</vwscdn.version>
    <vaadin.version>7.5.3</vaadin.version>
  </properties>


  <dependencyManagement>


    <!--project versions-->
    <dependencies>
      <!--<dependency>-->
      <!--<groupId>org.rapidpm</groupId>-->
      <!--<artifactId>rapidpm-dependencies</artifactId>-->
      <!--<version>1.0.0-SNAPSHOT</version>-->
      <!--</dependency>-->

      <!--<dependency>-->
      <!--<groupId>org.rapidpm.proxybuilder</groupId>-->
      <!--<artifactId>rapidpm-proxybuilder</artifactId>-->
      <!--<version>0.0.2-SNAPSHOT</version>-->
      <!--</dependency>-->

      <dependency>
        <groupId>org.rapidpm.proxybuilder</groupId>
        <artifactId>rapidpm-proxybuilder-modules-builder</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm.proxybuilder</groupId>
        <artifactId>rapidpm-proxybuilder-modules-dynamicobjectadapter-generator-annotations</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm.proxybuilder</groupId>
        <artifactId>rapidpm-proxybuilder-modules-dynamicobjectadapter-generator-processors</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>


      <dependency>
        <groupId>org.rapidpm.dynamic-cdi</groupId>
        <artifactId>rapidpm-dynamic-cdi</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>


      <dependency>
        <groupId>org.rapidpm.microservice</groupId>
        <artifactId>rapidpm-microservice-modules-core</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.rapidpm.microservice</groupId>
        <artifactId>rapidpm-microservice-modules-persistence-jdbc</artifactId>
        <version>0.0.2-SNAPSHOT</version>
      </dependency>


      <!--project versions-->
      <!--Undertow-->
      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-core</artifactId>
        <version>${undertow.version}</version>
      </dependency>
      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-servlet</artifactId>
        <version>${undertow.version}</version>
      </dependency>
      <!--Undertow-->

      <!--RestEasy-->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-undertow</artifactId>
        <version>${resteasy-undertow.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-cdi</artifactId>
        <version>${resteasy-undertow.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>${resteasy-undertow.version}</version>
      </dependency>
      <!--RestEasy-->


      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>3.1.2</version>
      </dependency>

      <!--Google stuff-->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>18.0</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.3.1</version>
        <optional>true</optional>
        <!-- case: when no json de/serialization -->
      </dependency>
      <dependency>
        <groupId>com.google.auto.service</groupId>
        <artifactId>auto-service</artifactId>
        <version>1.0-rc2</version>
        <!--<optional>true</optional>-->
      </dependency>
      <!--Google stuff-->


      <!--Reflection Utils-->
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>0.9.10</version>
      </dependency>
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.20.0-GA</version>
      </dependency>

      <!--Apache Commons-->

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-vfs2</artifactId>
        <version>2.0</version>
        <scope>provided</scope>
        <optional>true</optional>
        <!-- case: -->
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>fluent-hc</artifactId>
        <version>4.5</version>
      </dependency>


      <!--Apache Commons-->

      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>1.6.1</version>
        <optional>true</optional>
        <!-- case: when no xml de/serialization -->
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <!--Logging-->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.3</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-1.2-api</artifactId>
        <version>2.3</version>
      </dependency>

      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>2.4.0</version>
        <scope>compile</scope>
      </dependency>

      <!--tdd-->

      <dependency>
        <!--  must be on the classpath  -->
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.agent</artifactId>
        <classifier>runtime</classifier>
        <version>0.7.5.201505241946</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.0</version>
      </dependency>

      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>2.3.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.1.0</version>
        <scope>test</scope>
      </dependency>
      <!--Microbenchmarking-->
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${jmh.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core-benchmarks</artifactId>
        <version>${jmh.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${jmh.version}</version>
        <!--<scope>provided</scope>-->
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-reflection</artifactId>
        <version>${jmh.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-exec</artifactId>
        <version>1.8</version>
        <scope>test</scope>
      </dependency>

      <!--tdd-->


      <!--Brian Goetz Concurrency Annotations-->
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>com.squareup</groupId>
        <artifactId>javapoet</artifactId>
        <version>1.3.0-SNAPSHOT</version>
      </dependency>

      <!--Vaadin Based stuff-->
      <dependency>
        <groupId>in.virit.vwscdn</groupId>
        <artifactId>vwscdn-client</artifactId>
        <version>${vwscdn.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <dependencies>

    <!--<dependency>-->
    <!--<groupId>org.jetbrains.kotlin</groupId>-->
    <!--<artifactId>kotlin-stdlib</artifactId>-->
    <!--</dependency>-->


    <!--tdd-->
    <dependency>
      <!--  must be on the classpath  -->
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <classifier>runtime</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <!--Microbenchmarking-->
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core-benchmarks</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-reflection</artifactId>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.5.201505241946</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-repository-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.16</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.eluder.coveralls</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>3.1.0</version>
          <!--<configuration>-->
          <!--<repoToken>KMHtA4a1JE18NXrfejbMeHP0bsobH09To</repoToken>-->
          <!--</configuration>-->
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>1.1.6</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.4.0</version>
        </plugin>

        <!--Vaadin Widget external -->
        <plugin>
          <groupId>in.virit.vwscdn</groupId>
          <artifactId>vwscdn-maven-plugin</artifactId>
          <version>${vwscdn.version}</version>
        </plugin>


      </plugins>
    </pluginManagement>


    <plugins>
      <!-- Define release properties -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>extras</releaseProfiles>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>

      <!--<plugin>-->
      <!--<artifactId>kotlin-maven-plugin</artifactId>-->
      <!--<groupId>org.jetbrains.kotlin</groupId>-->
      <!--<version>${kotlin.version}</version>-->

      <!--<executions>-->
      <!--<execution>-->
      <!--<id>compile</id>-->
      <!--<phase>process-sources</phase>-->
      <!--<goals>-->
      <!--<goal>compile</goal>-->
      <!--</goals>-->
      <!--</execution>-->

      <!--<execution>-->
      <!--<id>test-compile</id>-->
      <!--<phase>process-test-sources</phase>-->
      <!--<goals>-->
      <!--<goal>test-compile</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--</plugin>-->


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <inherited>false</inherited>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <inherited>false</inherited>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>

      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>

      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-repository-plugin</artifactId>
      </plugin>
      <!-- Configure Cobertura support for evaluating test case coverage -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <aggregate>true</aggregate>
          <instrumentation>
            <excludes>
              <!--<exclude>${cobertura.exclude.benchmark.generated}</exclude>-->
              <exclude>org/openjdk/jmh/infra/generated/**/*.class</exclude>
              <!--<exclude>${cobertura.exclude.benchmark.runner}</exclude>-->
              <!--<exclude>${cobertura.exclude.android.test}</exclude>-->
            </excludes>
          </instrumentation>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <check/>
        </configuration>
      </plugin>
      <!-- Generate coveralls reports from Travis -->
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <configuration>
          <!--<repoToken>PVjxLL7z80TYKPmIrFWCcF8gSsRlcSCMm</repoToken>-->
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add generated sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/annotations</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add generated test sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/annotations</source>
                <source>${project.build.directory}/generated-test-sources/annotations</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <!--
              Enables analysis which takes more memory but finds more bugs.
              If you run out of memory, changes the value of the effort element
              to 'low'.
          -->
          <effort>Max</effort>
          <!-- Reports all bugs (other values are medium and max) -->
          <threshold>Low</threshold>
          <!-- Produces XML report -->
          <xmlOutput>true</xmlOutput>
          <!-- Configures the directory in which the XML report is created -->
          <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.1.6</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>


  <profiles>

    <profile>
      <id>qm-qs-pitest</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- Enable mutation testing -->
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <configuration>
              <targetClasses>
                <param>org.rapidpm.*</param>
              </targetClasses>
              <targetTests>
                <param>org.rapidpm.*</param>
                <param>junit.org.rapidpm.*</param>
              </targetTests>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>qm-qs-jacoco</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-instrument</id>
                <goals>
                  <goal>instrument</goal>
                </goals>
              </execution>
              <execution>
                <id>default-restore-instrumented-classes</id>
                <goals>
                  <goal>restore-instrumented-classes</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <!--  implementation is needed only for Maven 2  -->
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <!--  implementation is needed only for Maven 2  -->
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.60</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <id>sys-nexus-deploy</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <!--for development of features/develop branch-->
      <distributionManagement>
        <repository>
          <id>sonatype-nexus-snapshots</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
          <id>sonatype-nexus-snapshots</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>


    <profile>
      <id>sys-nexus-deploy-gpg</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <!--<phase>install</phase>-->
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- embedded profiles -->
    <profile>
      <id>qm-qs-junit</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <includes>
                <include>**/junit/**</include>
              </includes>
              <forkMode>always</forkMode>
              <reportFormat>xml</reportFormat>
              <!--<classesDirectory>target/generated-classes/emma/classes</classesDirectory>-->
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>qm-qs-checkstyle</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- Check style on build -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>validate</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <!--<excludes>**/generated/**/*</excludes>-->
                  <!--<excludes>**/generated-sources/vwscdn/*</excludes>-->
                  <excludes>in/virit/*,com/acme/**/*</excludes>
                  <checkstyleRules>
                    <module name="Checker">
                      <!--<module name="JavadocPackage"/>-->
                      <!--<module name="NewlineAtEndOfFile"/>-->
                      <module name="FileTabCharacter"/>

                      <module name="RegexpSingleline">
                        <property name="format" value="\s+$"/>
                        <property name="minimum" value="0"/>
                        <property name="maximum" value="0"/>
                        <property name="message" value="Line has trailing spaces."/>
                      </module>

                      <module name="TreeWalker">

                        <!-- Checkstyle has a bug that disallows @return in annotation methods, enable only on demand -->
                        <!--<module name="JavadocMethod"/>-->

                        <!--<module name="JavadocType"/>-->
                        <!--<module name="JavadocVariable"/>-->
                        <!--<module name="JavadocStyle"/>-->

                        <module name="TodoComment"/>

                        <module name="ConstantName"/>
                        <module name="LocalFinalVariableName"/>
                        <module name="LocalVariableName"/>
                        <module name="MemberName"/>
                        <module name="MethodName"/>
                        <module name="PackageName"/>
                        <module name="ParameterName"/>
                        <module name="StaticVariableName"/>
                        <module name="TypeName"/>

                        <module name="IllegalImport"/>
                        <module name="RedundantImport"/>
                        <module name="UnusedImports"/>

                        <module name="EmptyForIteratorPad"/>
                        <module name="GenericWhitespace"/>
                        <module name="MethodParamPad"/>
                        <module name="ParenPad"/>
                        <module name="TypecastParenPad"/>
                        <module name="WhitespaceAfter"/>
                        <module name="WhitespaceAround">
                          <!-- The RCURLY token has strange semantics where annotation arrays should have a spacing while normal
                               arrays should not have such a spacing - therefore, we rather exclude it from automatic checks -->
                          <property name="tokens"
                                    value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND"/>
                        </module>
                        <!--<module name="NoWhitespaceAfter"/>-->
                        <!--<module name="NoWhitespaceBefore"/>-->

                        <module name="ModifierOrder"/>

                        <module name="LeftCurly"/>
                        <module name="RightCurly"/>

                        <module name="EmptyStatement"/>
                        <module name="EqualsHashCode"/>
                        <module name="IllegalInstantiation"/>
                        <module name="MissingSwitchDefault"/>
                        <!--<module name="RedundantThrows"/>-->
                        <module name="SimplifyBooleanExpression"/>
                        <module name="SimplifyBooleanReturn"/>

                        <module name="HideUtilityClassConstructor"/>
                        <module name="InterfaceIsType"/>

                        <module name="ArrayTypeStyle"/>
                        <module name="UpperEll"/>
                      </module>
                    </module>

                  </checkstyleRules>
                  <consoleOutput>true</consoleOutput>
                  <failsOnError>true</failsOnError>
                  <encoding>UTF-8</encoding>
                  <outputFileFormat>plain</outputFileFormat>
                  <outputFileFormat>xml</outputFileFormat>
                </configuration>

              </execution>
            </executions>

          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


</project>